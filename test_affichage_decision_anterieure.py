#!/usr/bin/env python
"""
Test de l'affichage des d√©cisions ant√©rieures
"""

import os
import sys
import django
from datetime import date

# Configuration Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'equivalence.settings')
django.setup()

from dossiers.models import Dossier, Candidat, EtatDossier, ConsistanceAcademique
from users.models import CustomUser
from django.test import Client
from django.urls import reverse

def test_affichage_decision_anterieure():
    """Test de l'affichage des d√©cisions ant√©rieures sans √©valuation actuelle"""
    print("=== Test Affichage D√©cision Ant√©rieure ===")
    
    try:
        # 1. Cr√©er un utilisateur professeur
        prof_user = CustomUser.objects.create_user(
            username='prof_test_affichage',
            email='prof_affichage@example.com',
            password='profpass123',
            role='professeur'
        )
        print("‚úÖ Professeur cr√©√©:", prof_user.username)
        
        # 2. Cr√©er un dossier
        dossier = Dossier.objects.create(
            titre="Dossier test affichage d√©cision ant√©rieure",
            description="Test de l'affichage sans √©valuation",
            statut='en_cours'
        )
        dossier.professeurs.add(prof_user)
        print("‚úÖ Dossier cr√©√©:", dossier.titre)
        
        # 3. Cr√©er un candidat
        candidat = Candidat.objects.create(
            dossier=dossier,
            nom="Candidat Test Affichage",
            date_arrivee=date(2024, 1, 15),
            pays_origine="Maroc"
        )
        print("‚úÖ Candidat cr√©√©:", candidat.nom)
        
        # 4. Cr√©er un √©tat de dossier avec d√©cision ant√©rieure SEULEMENT
        etat_dossier = EtatDossier.objects.create(
            candidat=candidat,
            est_nouveau_dossier=False,
            a_decision_anterieure=True,
            date_decision_anterieure=date(2024, 1, 10),
            decision_anterieure="√âquivalence partielle accord√©e. Compl√®tement de dossier demand√©.",
            pieces_demandees="Relev√©s de notes manquants, programme d√©taill√© des cours"
        )
        print("‚úÖ √âtat dossier cr√©√© avec d√©cision ant√©rieure")
        
        # 5. PAS de consistance acad√©mique (pas d'√©valuation actuelle)
        print("‚úÖ Aucune consistance acad√©mique cr√©√©e (simulation d'un dossier sans √©valuation)")
        
        # 6. Tester la vue d'√©valuation
        print("\n--- Test de la vue d'√©valuation ---")
        client = Client()
        
        # Se connecter en tant que professeur
        login_success = client.login(username='prof_test_affichage', password='profpass123')
        print(f"‚úÖ Connexion professeur: {login_success}")
        
        # Acc√©der √† la vue d'√©valuation
        url = reverse('dossiers:evaluation_equivalence', args=[dossier.id])
        response = client.get(url)
        print(f"‚úÖ Code r√©ponse √©valuation: {response.status_code}")
        
        if response.status_code == 200:
            content = response.content.decode()
            
            # V√©rifier que la d√©cision ant√©rieure est affich√©e
            if "D√©cision Ant√©rieure" in content:
                print("‚úÖ D√©cision ant√©rieure affich√©e")
            else:
                print("‚ùå D√©cision ant√©rieure non affich√©e")
            
            # V√©rifier que la grille d'√©valuation n'est PAS affich√©e
            if "Grille d'√©valuation et interpr√©tation des r√©sultats" in content:
                print("‚ùå Grille d'√©valuation affich√©e (ne devrait pas l'√™tre)")
            else:
                print("‚úÖ Grille d'√©valuation non affich√©e (correct)")
            
            # V√©rifier que le bouton "Commencer l'√©valuation" est affich√©
            if "Commencer l'√©valuation acad√©mique" in content:
                print("‚úÖ Bouton 'Commencer l'√©valuation' affich√©")
            else:
                print("‚ùå Bouton 'Commencer l'√©valuation' non affich√©")
            
            # V√©rifier le message explicatif
            if "Pourquoi la grille d'√©valuation n'est pas visible" in content:
                print("‚úÖ Message explicatif affich√©")
            else:
                print("‚ùå Message explicatif non affich√©")
                
        else:
            print("‚ùå Erreur d'acc√®s √† la vue d'√©valuation")
        
        # 7. Nettoyer les donn√©es de test
        print("\n--- Nettoyage ---")
        dossier.delete()
        prof_user.delete()
        print("‚úÖ Donn√©es de test supprim√©es")
        
        print("\nüéâ Test d'affichage termin√© avec succ√®s !")
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur lors du test: {str(e)}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    test_affichage_decision_anterieure()

